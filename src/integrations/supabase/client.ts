// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types'; // Assuming Database types are generated correctly

// Ensure your environment variables are configured, or fallback to hardcoded values (less recommended)
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || "https://egbpjvbrqtvxtlpqkszr.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVnYnBqdmJycXR2eHRscHFrc3pyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM3NzM5NzQsImV4cCI6MjA1OTM0OTk3NH0.90u6Thhc8fDRT5uLcDK2-suSynoe_HW6j8aUAmf7YLQ";

if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  throw new Error("Supabase URL or Anon Key is missing. Check your environment variables (.env file).");
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage, // Use localStorage for session persistence
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true, // Useful for OAuth redirects
  },
  // Add global options if needed, e.g., fetch options
  // global: {
  //   fetch: (input, init) => fetch(input, { ...init, cache: 'no-store' }), // Example: disable caching
  // }
});

// Optional: Add a listener for auth changes (useful for debugging or global state)
supabase.auth.onAuthStateChange((event, session) => {
  console.log('Supabase Auth Event:', event, session);
});